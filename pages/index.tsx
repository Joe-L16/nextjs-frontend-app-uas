import Head from 'next/head';
import Layout from '@/components/organisms/Layout';
import { useCallback, useEffect, useState } from 'react';
import { userType } from '@/service/data-types/user-type';
import { userService, userServiceDestroy } from '@/service/user-service';
import Button from '@/components/atoms/Button';
import { useRouter } from 'next/router';

export default function Home() {
  const router = useRouter();
  const [isLoading, setIsLoading] = useState(false);
  const [users, setUsers] = useState<userType[]>([]);

  const getUser = useCallback(async () => {
    setIsLoading(true);

    try {
      const response = await userService();

      if (response.error) {
        alert(response.message);
      } else {
        setUsers(response.data);
      }
    } catch (error) {
      console.log(error);
    } finally {
      setIsLoading(false);
    }
  }, []);

  const handleDelete = async (id: string) => {
    try {
      const response = await userServiceDestroy(id);
      if (!response.error) {
        alert('User deleted successfully!');
        getUser(); // Refresh the list after deletion
      } else {
        alert('Failed to delete user');
      }
    } catch (error) {
      alert((error as Error).message);
    }
  };

  const handleDetail = (id: string) => {
    router.push(`/user/detail/${id}`);
  };

  useEffect(() => {
    getUser();
  }, [getUser]);

  return (
    <>
      <Head>
        <title>Admin Dashboard</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <div className="container-fluid px-4">
          <h1 className="mt-4">Authors</h1>
          <ol className="breadcrumb mb-4">
            <li className="breadcrumb-item active">Authors</li>
          </ol>
          <div className="card mb-4">
            <div className="card-header">
              <i className="fas fa-table me-1"></i>
              Data Authors{' '}
              <div className="d-flex justify-content-end gap-1">
                <Button
                  type="button"
                  onClickButton={getUser}
                  isLoading={isLoading}
                  className={['btn btn-primary btn-sm']}
                >
                  <i className="fas fa-sync-alt me-1"></i>
                </Button>
                <Button
                  type="link"
                  href="/user/create"
                  className={['btn btn-primary btn-sm me-2']}
                >
                  Tambah Data
                </Button>
              </div>
            </div>
            <div className="card-body">
              <table className="table">
                <thead>
                  <tr>
                    <th scope="col">#</th>
                    <th scope="col">Nama</th>
                    <th scope="col">Birthdate</th>
                    <th scope="col">Email</th>
                    <th scope="col">Action</th>
                  </tr>
                </thead>
                <tbody>
                  {users.map((item: userType, index) => (
                    <tr key={index}>
                      <th scope="row">{index + 1}</th>
                      <td>{item.name}</td>
                      <td>{item.birthdate}</td>
                      <td>{item.email}</td>
                      <td>
                        <Button
                          type="button"
                          onClickButton={() => item?.id && handleDetail(item.id.toString())}
                          className={['btn btn-success btn-sm me-2']}
                        >
                          Detail
                        </Button>
                        <Button
                          type="link"
                          href={`user/edit/${item.id}`}
                          className={['btn btn-warning btn-sm me-2']}
                        >
                          Update
                        </Button>
                        <Button
                          type="button"
                          onClickButton={() => item?.id && handleDelete(item.id.toString())}
                          className={['btn btn-danger btn-sm']}
                        >
                          Delete
                        </Button>
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </Layout>
    </>
  );
}
